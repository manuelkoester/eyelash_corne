#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        lh_pht: home_row_left_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 35 36 37 38 39 40 41 42 43 44 45 46>;
        };

        rh_pht: home_row_right_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 41 42 43 44 45 46>;
        };
    };


    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC           &kp Q  &kp W  &kp E         &kp R      &kp T                               &kp UP                &kp Y        &kp U          &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp CAPSLOCK      &kp A  &kp S  &kp D         &kp F      &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V      &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                                &lt 4 ESCAPE  &lt 2 TAB  &lt 1 SPACE                                               &lt 2 ENTER  &kp BACKSPACE  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                            &mmv MOVE_UP                     &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET     &trans
&trans  &trans  &trans  &trans  &trans  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp GRAVE         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL             &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &mmv MOVE_DOWN                   &kp SINGLE_QUOTE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NON_US_BACKSLASH  &trans
                        &trans  &trans  &trans                                                             &kp MINUS         &kp PERIOD    &kp N0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans         &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)                               &mmv MOVE_UP                     &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(TILDE)  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans         &kp LS(DQT)    &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)  &kp LSHFT                    &mmv MOVE_DOWN                   &trans  &trans  &trans  &trans  &trans  &trans
                                            &kp LS(LPAR)   &kp LS(RPAR)   &kp SPACE                                                                   &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                &mmv MOVE_UP                     &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                        &trans  &trans  &trans                                                                 &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans    &trans         &trans       &trans     &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp K_APPLICATION  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans             &trans
                        &trans  &trans  &trans                                    &trans    &trans         &trans
            >;
        };
    };
};
